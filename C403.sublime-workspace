{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"int",
				"intervals	stringstream"
			],
			[
				"snip",
				"snipInt	string"
			],
			[
				"eras",
				"erase(iterator __position)	iterator"
			],
			[
				"song",
				"songInt	string"
			],
			[
				"inter",
				"intervals	stringstream"
			],
			[
				"son",
				"songInt"
			],
			[
				"read",
				"readLine(const int M)	string"
			],
			[
				"rea",
				"readLine"
			],
			[
				"sni",
				"snipInt	string"
			],
			[
				"snipp",
				"snippet	string"
			],
			[
				"string",
				"stringstream"
			],
			[
				"resu",
				"result	int"
			],
			[
				"seco",
				"second	string"
			],
			[
				"fir",
				"first	string"
			],
			[
				"songS",
				"songStream	stringstream"
			],
			[
				"songI",
				"songInt	string"
			],
			[
				"print",
				"printf(const char *restrict __format, ...)	int"
			],
			[
				"Scale",
				"Scale	map<string, int>"
			],
			[
				"Sca",
				"Scale	map<string, int>"
			],
			[
				"prin",
				"printf(const char *restrict __format, ...)	int"
			],
			[
				"val",
				"validInput(const int M, const int T)	bool"
			],
			[
				"sold",
				"soldier	struct"
			],
			[
				"line",
				"line	soldier *"
			],
			[
				"rig",
				"right	int"
			],
			[
				"lin",
				"line	soldier *"
			],
			[
				"check",
				"checkRight"
			],
			[
				"las",
				"last	const int &"
			],
			[
				"chec",
				"checkLeft"
			],
			[
				"repo",
				"reports	int"
			],
			[
				"dif",
				"diffIt	set<sumMap>::iterator"
			],
			[
				"diff",
				"diffIt	set<sumMap>::iterator"
			],
			[
				"abSu",
				"abSums	vector<int>"
			],
			[
				"binSear",
				"binSearch(const vector<int> &sums, const int &val, int first, int last)	int"
			],
			[
				"roo",
				"root_j	size_t"
			],
			[
				"par",
				"parent	size_t"
			],
			[
				"fore",
				"forest	vector<disjoint_set>"
			],
			[
				"sets",
				"sets	disjoint_sets"
			],
			[
				"ra",
				"rank	unsigned int"
			],
			[
				"disjoi",
				"disjoint_sets	class"
			],
			[
				"dis",
				"disjoint_sets	class"
			],
			[
				"grpN",
				"grpNode	struct"
			],
			[
				"grp",
				"grpNode	struct"
			],
			[
				"grou",
				"groups	vector<set<int> >"
			],
			[
				"e",
				"empty() const	bool"
			],
			[
				"adj",
				"adjlist	vector<set<int> >"
			],
			[
				"ad",
				"adjlist	vector<set<int> >"
			],
			[
				"pai",
				"pairs	int"
			],
			[
				"citi",
				"citizens	int"
			],
			[
				"n",
				"name"
			],
			[
				"cour",
				"courseMarks"
			],
			[
				"cou",
				"courseMarks"
			],
			[
				"sp",
				"splitext  (function)"
			],
			[
				"htt",
				"HTTPError  (class)"
			],
			[
				"errorco",
				"errorcode  (variable)"
			],
			[
				"pa",
				"path  (module)"
			],
			[
				"frag",
				"fragShader	char *"
			],
			[
				"vert",
				"vertShader	char *"
			],
			[
				"progr",
				"programHandle	int"
			],
			[
				"fragme",
				"fragmentShaderHandle	int"
			],
			[
				"NULL",
				"NULL	macro"
			],
			[
				"GL_FRAG",
				"GL_FRAGMENT_SHADER	macro"
			],
			[
				"glCreat",
				"glCreateShader	macro"
			],
			[
				"GL_VE",
				"GL_VERTEX_SHADER	macro"
			],
			[
				"glCr",
				"glCreateShader	macro"
			],
			[
				"steps",
				"steps	int"
			],
			[
				"frame",
				"frame	int"
			],
			[
				"rV",
				"rVal	double"
			],
			[
				"Bac",
				"BACK	bool"
			],
			[
				"dep",
				"depth	float"
			],
			[
				"de",
				"depth"
			],
			[
				"glP",
				"glPushMatrix()	void"
			],
			[
				"usl",
				"usleep(__useconds_t __useconds)	int"
			],
			[
				"rnd0",
				"rnd01()	double"
			],
			[
				"rd",
				"rnd01()	double"
			],
			[
				"glPush",
				"glPushMatrix()	void"
			],
			[
				"glClearCo",
				"glClearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)	void"
			],
			[
				"rnd",
				"rnd01()	double"
			],
			[
				"glSwap",
				"glutSwapBuffers()	void"
			],
			[
				"glCl",
				"glClear(GLbitfield mask)	void"
			],
			[
				"draw",
				"draw_cube()	void"
			],
			[
				"glPop",
				"glPopMatrix()	void"
			],
			[
				"gltr",
				"glTranslated(GLdouble x, GLdouble y, GLdouble z)	void"
			],
			[
				"x_",
				"x_angle	float"
			],
			[
				"x",
				"x_angle	float"
			],
			[
				"glrot",
				"glRotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z)	void"
			],
			[
				"GL_DEPTH_TE",
				"GL_DEPTH_TEST	macro"
			],
			[
				"glEna",
				"glEnable(GLenum cap)	void"
			],
			[
				"glPu",
				"glPushMatrix()	void"
			],
			[
				"glTra",
				"glTranslatef(GLfloat x, GLfloat y, GLfloat z)	void"
			],
			[
				"glRot",
				"glRotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z)	void"
			],
			[
				"GL_DEPTH_B",
				"GL_DEPTH_BUFFER_BIT"
			],
			[
				"GLUT",
				"GLUT_DEPTH"
			],
			[
				"t_",
				"t_ind	size_t"
			],
			[
				"stop",
				"stop_after_first	bool"
			],
			[
				"flip",
				"flipped	int"
			],
			[
				"trian",
				"triangles	std::vector<Triangle>"
			],
			[
				"index",
				"index	size_t"
			],
			[
				"Trian",
				"Triangle"
			],
			[
				"tria",
				"triangles	std::vector<Triangle>"
			],
			[
				"height",
				"height	Coordinate"
			],
			[
				"wi",
				"width	Coordinate"
			],
			[
				"Point",
				"Point	struct"
			],
			[
				"Tr",
				"Triangle	struct"
			],
			[
				"Po",
				"Point	struct"
			],
			[
				"point",
				"points	Point [3]"
			],
			[
				"poi",
				"points	Point [3]"
			],
			[
				"in_c",
				"in_circle(const Point &a, const Point &b, const Point &c, const Point &d)	Coordinate"
			],
			[
				"in_",
				"in_circle(const Point &a, const Point &b, const Point &c, const Point &d)	Coordinate"
			],
			[
				"or",
				"orientation(const Point &a, const Point &b, const Point &c)	Coordinate"
			],
			[
				"C",
				"C"
			],
			[
				"delta",
				"delta	float"
			],
			[
				"vec",
				"vec	Vector3f"
			],
			[
				"Vector3f",
				"Vector3f	typedef"
			],
			[
				"DMatri",
				"DMatrix	float **"
			],
			[
				"Dma",
				"DMatrix	float **"
			],
			[
				"fclose",
				"fclose(FILE *__stream)	int"
			],
			[
				"numVert",
				"numVertices	int"
			],
			[
				"D",
				"DMatrix	float **"
			],
			[
				"compu",
				"computeDV()	void"
			],
			[
				"vertices",
				"vertices	std::vector<float>"
			],
			[
				"hierar",
				"hierarchy	Node *"
			],
			[
				"buildBone",
				"buildBonesList(Node *)	void"
			],
			[
				"bone",
				"bone	Node *"
			],
			[
				"pu",
				"push_back(value_type &&__x)	void"
			],
			[
				"bones",
				"bones	std::vector<Node *>"
			],
			[
				"tr",
				"transl"
			],
			[
				"hier",
				"hierarchy	Node *"
			],
			[
				"numVer",
				"numVertices	int"
			]
		]
	},
	"buffers":
	[
		{
			"file": "UVA11512.C",
			"settings":
			{
				"buffer_size": 924,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/C++/C++.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"pack",
				"Package Control: Disable Package"
			],
			[
				"PACK",
				"Package Control: Disable Package"
			],
			[
				"pac",
				"Package Control: Disable Package"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 190.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/cshome/tdavidso/C403/UVA11837.C",
		"/cshome/tdavidso/C403/input",
		"/cshome/tdavidso/.config/sublime-text-2/Packages/User/C++.sublime-build",
		"/cshome/tdavidso/.config/sublime-text-2/Packages/User/Preferences.sublime-settings",
		"/cshome/tdavidso/C403/UVA10728.C",
		"/cshome/tdavidso/C403/Done/UVA100.C",
		"/cshome/tdavidso/C403/UVA101.C",
		"/cshome/tdavidso/C403/UVA10125.C",
		"/cshome/tdavidso/C403/UVA10608.C",
		"/cshome/tdavidso/C403/UVA10267.C",
		"/cshome/tdavidso/C403/12356Input",
		"/cshome/tdavidso/C403/UVA12356.C",
		"/cshome/tdavidso/C403/Done/UVA10189.C",
		"/cshome/tdavidso/C403/Done/UVA136.C",
		"/cshome/tdavidso/C403/Done/UVA10815.C",
		"/cshome/tdavidso/C403/UVA115.C",
		"/cshome/tdavidso/C410/labs/lab1/name-family.py",
		"/usr/lib/python2.7/SocketServer.py",
		"/usr/lib/python2.7/unittest/__init__.py",
		"/usr/lib/python2.7/urllib2.py",
		"/cshome/tdavidso/.config/sublime-text-2/Packages/User/SublimeCodeIntel.sublime-settings",
		"/cshome/tdavidso/.config/sublime-text-2/Packages/SublimeCodeIntel/SublimeCodeIntel.sublime-settings",
		"/cshome/tdavidso/C410/as1/CMPUT404-assignment-webserver/runner.sh",
		"/cshome/tdavidso/C410/as1/CMPUT404-assignment-webserver/server.py",
		"/cshome/tdavidso/.config/sublime-text-2/Packages/User/Pylinter.sublime-settings",
		"/cshome/tdavidso/.config/sublime-text-2/Packages/Pylinter/Pylinter.sublime-settings",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/buttons.vert",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/beaconLight.frag",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/skyShader.frag",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/diffuseTexture.frag",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/diffuseTexture.vert",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/lightmappedMetal.vert",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/lightmappedMetal.frag",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/tapeSpindles.vert",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/tapeSpindles.frag",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/islandTerrain.vert",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/islandTerrain.frag",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/beaconLight.vert",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/oceanWater.frag",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/theSun.frag",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/buttons.frag",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/oceanWater.vert",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaderUtil.h",
		"/cshome/tdavidso/C411/ass4/a4files_3/shaders/question1_student_code.h",
		"/cshome/tdavidso/C350/labs/lab10/cubes.C",
		"/cshome/tdavidso/C350/labs/lab10/draw.C",
		"/cshome/tdavidso/C350/labs/lab10/squares.c",
		"/cshome/tdavidso/C350/labs/lab10/make",
		"/cshome/tdavidso/C411/ass1/modelviewer.cpp",
		"/cshome/tdavidso/.config/sublime-text-2/Packages/User/C++Labs.sublime-build",
		"/cshome/tdavidso/C411/ass4/a4files_1/shaderUtil.h",
		"/cshome/tdavidso/C411/ass4/a4files_1/shaders/question1_student_code.h",
		"/cshome/tdavidso/C411/ass4/a4files_1/Makefile",
		"/cshome/tdavidso/.config/sublime-text-2/Packages/User/C++GL.sublime-build",
		"/cshome/tdavidso/C350/labs/lab9/Triang.H",
		"/cshome/tdavidso/C350/labs/lab9/Triang.C",
		"/cshome/tdavidso/C350/labs/lab9/disp.C",
		"/cshome/tdavidso/C350/labs/lab9/Triang2.C",
		"/cshome/tdavidso/C350/labs/lab9/test.C",
		"/cshome/tdavidso/C350/labs/lab9/makefile",
		"/cshome/tdavidso/.config/sublime-text-2/Packages/User/MakeRun.sublime-build",
		"/cshome/tdavidso/C411/ass3/a3files/motion/gymnastics3.bvh",
		"/cshome/tdavidso/C411/ass3/personviewer.cpp",
		"/cshome/tdavidso/C411/ass3/a3files/motion/gymnastics2.bvh",
		"/cshome/tdavidso/C411/ass3/a3files/mesh/person-dev.obj",
		"/cshome/tdavidso/C411/ass3/ass3.sublime-workspace",
		"/cshome/tdavidso/C411/ass3/a3files/mesh/person.obj",
		"/cshome/tdavidso/C411/ass2/solution2/joint.h",
		"/cshome/tdavidso/C411/ass2/motionviewer.cpp",
		"/cshome/tdavidso/C411/ass2/motionviewer.h",
		"/cshome/tdavidso/C411/ass3/makefile",
		"/cshome/tdavidso/C411/ass2/Makefile",
		"/cshome/tdavidso/Sublime/Projects/411ass3/ass3/src/makefile",
		"/cshome/tdavidso/Sublime/Projects/ass3/ass3/makefile"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"songInt",
			"song",
			"procSong",
			"char",
			"N",
			"\\N",
			"cout",
			"line",
			"right",
			"int",
			"reports",
			"A",
			"tmp",
			"{",
			"std::",
			"[1]",
			"Angle",
			"1.",
			"vert",
			">",
			"NEED",
			"frame",
			"gVal",
			"gGoal",
			"r",
			"Val",
			"1.0",
			"if (BACK)",
			"--depth)",
			"dir",
			"i",
			"rot",
			"++angle",
			"angle",
			"2.0",
			"8",
			"10",
			"2.0",
			"5",
			".0",
			"0.0",
			",",
			"rnd01",
			".0",
			"1.",
			"rnd01()",
			"1.0",
			"0.",
			"0.0",
			"glPushMatrix",
			"1.0",
			"7",
			"3",
			"5.0",
			"10",
			"1",
			"0.0",
			"0",
			"memset",
			"emset",
			"w",
			"BORDER",
			"t1",
			"&&",
			"<",
			"cxa",
			"b->offset",
			"b->offset.",
			"+1",
			"3]",
			"vertices[i*3",
			"hierarchy",
			"glTranslatef",
			"readHierarchy",
			"blend",
			"vertNorms",
			"vertices",
			"faceSizes",
			"writeObjFile",
			"++",
			"vector",
			"JOINT",
			"joint",
			"Joint",
			"JOINT",
			"joint",
			"JOINT",
			"joint",
			"unrecon",
			"FLT_MAX",
			"joint",
			"unsigned",
			"JOINT",
			"joint",
			"Joint",
			"vector",
			"joint",
			"JOINT",
			"joint",
			"JOINT",
			"joint",
			"JOINT",
			"joint",
			"Joint",
			"joint",
			"JOINT",
			"joint",
			"JOINT",
			"joint",
			"JOINT",
			"joint",
			"fileName",
			"speedAdjust",
			"Joint",
			"joint",
			"vector",
			"joint",
			"writeHierarchy",
			"vector",
			"joint",
			"Vector3f",
			"vector",
			"joint",
			"Quaternionf",
			"Vector3f",
			"vector",
			"string",
			"joint"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": true,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "UVA11512.C",
					"settings":
					{
						"buffer_size": 924,
						"regions":
						{
						},
						"selection":
						[
							[
								908,
								908
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublime_auto_complete": false,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 162.0
	},
	"output.exec":
	{
		"height": 25.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 50.0,
	"status_bar_visible": true
}
